#include <iostream>

struct Node {
    int data;
    Node* prev;
    Node* next;

    Node(int value) : data(value), prev(nullptr), next(nullptr) {}
};

class DoublyLinkedList {
private:
    Node* head; /

public:

    DoublyLinkedList() : head(nullptr) {}

    void insertAtEnd(int value) {
        
        Node* newNode = new Node(value);

        if (head == nullptr) {
            head = newNode;
        } else {
            Node* current = head;
            while (current->next != nullptr) {
                current = current->next;
            }

            current->next = newNode;

            newNode->prev = current;
        }
    }

    void display() {
        Node* current = head;

        while (current != nullptr) {
            std::cout << current->data << " ";
            current = current->next;
        }

        std::cout << std::endl;
    }
};

int main() {

    DoublyLinkedList myList;

    myList.insertAtEnd(3);
    myList.insertAtEnd(7);
    myList.insertAtEnd(1);

    std::cout << "Doubly Linked List: ";
    myList.display();

    return 0;
}
