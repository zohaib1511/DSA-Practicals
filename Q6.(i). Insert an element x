#include <iostream>

struct TreeNode {
    int data;
    TreeNode* left;
    TreeNode* right;

    TreeNode(int value) : data(value), left(nullptr), right(nullptr) {}
};

class BinarySearchTree {
private:
    TreeNode* root; 

public:
    BinarySearchTree() : root(nullptr) {}

    void insert(int value) {
        root = insertRecursive(root, value);
        std::cout << "Element " << value << " inserted into the Binary Search Tree." << std::endl;
    }

    TreeNode* insertRecursive(TreeNode* node, int value) {
        if (node == nullptr) {
            return new TreeNode(value);
        }

        if (value < node->data) {
            node->left = insertRecursive(node->left, value);
        } else if (value > node->data) {
            node->right = insertRecursive(node->right, value);
        }
        return node;
    }
};

int main() {
    BinarySearchTree myBST;
    myBST.insert(50);
    myBST.insert(30);
    myBST.insert(20);
    myBST.insert(40);
    myBST.insert(70);
    myBST.insert(60);
    myBST.insert(80);


    return 0;
}







