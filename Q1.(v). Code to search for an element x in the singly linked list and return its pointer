#include <iostream>

struct Node {
    int data;
    Node* next;

    Node(int value) : data(value), next(nullptr) {}
};

class LinkedList {
private:
    Node* head;

public:
     LinkedList() : head(nullptr) {}

    Node* search(int x) {
        Node* current = head;

        while (current != nullptr) {
            if (current->data == x) {
                return current;
            }

            current = current->next;
        }

        return nullptr;
    }

    void display() {
        Node* current = head;

        while (current != nullptr) {
            std::cout << current->data << " ";
            current = current->next;
        }

        std::cout << std::endl;
    }

    void insertAtBeginning(int value) {
        // Create a new node with the given value
        Node* newNode = new Node(value);

        newNode->next = head;

       
        head = newNode;
    }
};

int main() {
 
    LinkedList myList;

    myList.insertAtBeginning(3);
    myList.insertAtBeginning(7);
    myList.insertAtBeginning(1);

    std::cout << "Linked List: ";
    myList.display();

    int searchValue = 7;
    Node* result = myList.search(searchValue);

    if (result != nullptr) {
        std::cout << "Element " << searchValue << " found at address: " << result << std::endl;
    } else {
        std::cout << "Element " << searchValue << " not found in the list." << std::endl;
    }

    return 0;
}
